(function(n){var s=PhpDebugBar.utils.makecsscls("phpdebugbar-widgets-"),p=PhpDebugBar.Widgets.SQLQueriesWidget=PhpDebugBar.Widget.extend({className:s("sqlqueries"),onFilterClick:function(c){n(c).toggleClass(s("excluded"));var r=[];this.$toolbar.find(s(".filter")+s(".excluded")).each(function(){r.push(this.rel)}),this.$list.$el.find("li[connection="+n(c).attr("rel")+"]").toggle(),this.set("exclude",r)},onCopyToClipboard:function(c){var r=n(c).parent("li").find("code").get(0),t=function(){try{document.execCommand("copy"),alert("Query copied to the clipboard")}catch{console.log("Oops, unable to copy")}},e=function(i){if(document.selection){var a=document.body.createTextRange();a.moveToElementText(i),a.select()}else if(window.getSelection){var a=document.createRange();a.selectNodeContents(i),window.getSelection().removeAllRanges(),window.getSelection().addRange(a)}t(),window.getSelection().removeAllRanges()};e(r)},render:function(){this.$status=n("<div />").addClass(s("status")).appendTo(this.$el),this.$toolbar=n("<div></div>").addClass(s("toolbar")).appendTo(this.$el);var c=[],r=this;this.$list=new PhpDebugBar.Widgets.ListWidget({itemRenderer:function(t,e){if(n("<code />").addClass(s("sql")).html(PhpDebugBar.Widgets.highlight(e.sql,"sql")).appendTo(t),e.duration_str&&n('<span title="Duration" />').addClass(s("duration")).text(e.duration_str).appendTo(t),e.memory_str&&n('<span title="Memory usage" />').addClass(s("memory")).text(e.memory_str).appendTo(t),typeof e.row_count<"u"&&n('<span title="Row count" />').addClass(s("row-count")).text(e.row_count).appendTo(t),typeof e.stmt_id<"u"&&e.stmt_id&&n('<span title="Prepared statement ID" />').addClass(s("stmt-id")).text(e.stmt_id).appendTo(t),e.connection&&(n('<span title="Connection" />').addClass(s("database")).text(e.connection).appendTo(t),t.attr("connection",e.connection),n.inArray(e.connection,c)==-1&&(c.push(e.connection),n("<a />").addClass(s("filter")).text(e.connection).attr("rel",e.connection).on("click",function(){r.onFilterClick(this)}).appendTo(r.$toolbar),c.length>1&&(r.$toolbar.show(),r.$list.$el.css("margin-bottom","20px")))),typeof e.is_success<"u"&&!e.is_success&&(t.addClass(s("error")),t.append(n("<span />").addClass(s("error")).text("["+e.error_code+"] "+e.error_message))),n('<span title="Copy to clipboard" />').addClass(s("copy-clipboard")).css("cursor","pointer").on("click",function(o){r.onCopyToClipboard(this),o.stopPropagation()}).appendTo(t),e.params&&!n.isEmptyObject(e.params)){var i=n('<table><tr><th colspan="2">Params</th></tr></table>').addClass(s("params")).appendTo(t);for(var a in e.params)typeof e.params[a]!="function"&&i.append('<tr><td class="'+s("name")+'">'+a+'</td><td class="'+s("value")+'">'+e.params[a]+"</td></tr>");t.css("cursor","pointer").click(function(){i.is(":visible")?i.hide():i.show()})}}}),this.$list.$el.appendTo(this.$el),this.bindAttr("data",function(t){if(t.length<=0)return!1;this.$list.set("data",t.statements),this.$status.empty();for(var e={},i=0,a=0,o=0;o<t.statements.length;o++){var d=t.statements[o].sql;t.statements[o].params&&!n.isEmptyObject(t.statements[o].params)&&(d+=" {"+n.param(t.statements[o].params,!1)+"}"),e[d]=e[d]||{keys:[]},e[d].keys.push(o)}for(var d in e)if(e[d].keys.length>1){a+=e[d].keys.length;for(var o=0;o<e[d].keys.length;o++)this.$list.$el.find("."+s("list-item")).eq(e[d].keys[o]).addClass(s("sql-duplicate"))}else i++;var l=n("<span />").text(t.nb_statements+" statements were executed").appendTo(this.$status);t.nb_failed_statements&&l.append(", "+t.nb_failed_statements+" of which failed"),a&&(l.append(", "+a+" of which were duplicates"),l.append(", "+i+" unique")),t.accumulated_duration_str&&this.$status.append(n('<span title="Accumulated duration" />').addClass(s("duration")).text(t.accumulated_duration_str)),t.memory_usage_str&&this.$status.append(n('<span title="Memory usage" />').addClass(s("memory")).text(t.memory_usage_str))})}})})(PhpDebugBar.$);
